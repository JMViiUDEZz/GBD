1.
CREATE OR REPLACE FUNCTION EJ1_INSTITUTO(CP I_PROFESORES.CODPR%TYPE)
RETURN CHAR
AS
APE I_PROFESORES.APELLIDOS%TYPE;
NOM I_PROFESORES.NOMBRE%TYPE;
DEP I_PROFESORES.DEPARTAMENTO%TYPE;
SUE I_PROFESORES.SUELDO%TYPE;
FEC I_PROFESORES.FECHAALTA%TYPE;
CADENA CHAR(255);
BEGIN
SELECT APELLIDOS,NOMBRE,DEPARTAMENTO,SUELDO,FECHAALTA INTO APE,NOM,DEP,SUE,FEC FROM I_PROFESORES WHERE CODPR=CP;
CADENA:=APE||', '||NOM||' – '||DEP||' – '||SUE||' – '||FEC;
RETURN CADENA;
EXCEPTION WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE(' ');
END;

SELECT EJ1_INSTITUTO(2) FROM DUAL

2.
--NO HACE FALTA PONER * EN EL CURSOR, YA QUE SOLO QUEREMOS EXTRAER LOS CAMPOS
NOMBRE Y NIVEL DE I_ASIGNATURAS

CREATE OR REPLACE PROCEDURE EJ2_INSTITUTO(
CAL I_ALUMNOS.CODAL%TYPE,
CAC I_MATRICULA.CURSO%TYPE
)
AS
CALU I_ALUMNOS.CODAL%TYPE;
NOM I_ALUMNOS.NOMBRE%TYPE;
APE I_ALUMNOS.APELLIDOS%TYPE;
CIU I_ALUMNOS.CIUDAD%TYPE;
FEC I_ALUMNOS.FECHANACIMIENTO%TYPE;
CURSOR ASIGNATURAS IS SELECT * FROM I_ASIGNATURAS A INNER JOIN I_MATRICULA M ON A.CODAS=M.CODAS
WHERE A.CURSO=CAC AND M.CODAL=CAL;
BEGIN
SELECT CODAL,NOMBRE,APELLIDOS,CIUDAD,FECHANACIMIENTO 
INTO CALU,NOM,APE,CIU,FEC FROM I_ALUMNOS WHERE CODAL=CAL;
DBMS_OUTPUT.PUT_LINE(CALU||' '||NOM||' '||APE||' '||CIU||' '||FEC);
FOR FILA_ASIGNATURAS IN ASIGNATURAS LOOP
DBMS_OUTPUT.PUT_LINE(FILA_ASIGNATURAS.NOMBRE||' '||FILA_ASIGNATURAS.NIVEL);
END LOOP;
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('EL ALUMNO NO EXISTE');
END;

EXECUTE EJ2_INSTITUTO(1,'1')

3.
CREATE OR REPLACE PROCEDURE EJ3_INSTITUTO(FEC I_NOTAS.FECHA%TYPE) AS
CURSOR C IS SELECT N.CODAL,N.CODAS,AL.NOMBRE NOM_AL,AL.APELLIDOS APE_AL,ASI.NOMBRE NOM_ASI,N.NOTA 
FROM I_ASIGNATURAS ASI INNER JOIN I_NOTAS N ON ASI.CODAS=N.CODAS INNER JOIN I_ALUMNOS AL ON N.CODAL=AL.CODAL 
WHERE N.FECHA=FEC;
BEGIN
FOR F IN C LOOP
DBMS_OUTPUT.PUT_LINE(F.NOM_AL||' '||F.APE_AL||', '||F.NOM_ASI||': '||F.NOTA);
END LOOP;
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('EL ALUMNO NO EXISTE');
END;

EXECUTE EJ3_INSTITUTO('10/12/12');

4.
CREATE OR REPLACE PROCEDURE EJ4_INSTITUTO AS
CURSOR C IS SELECT N.CODAL,N.CODAS,AL.NOMBRE NOM_AL,AL.APELLIDOS APE_AL,ASI.NOMBRE NOM_ASI,N.NOTA 
FROM I_ASIGNATURAS ASI INNER JOIN I_NOTAS N ON ASI.CODAS=N.CODAS INNER JOIN I_ALUMNOS AL ON N.CODAL=AL.CODAL
ORDER BY NOTA DESC;
F C%ROWTYPE;
BEGIN
OPEN C;
LOOP
FETCH C INTO F;
EXIT WHEN C%NOTFOUND OR C%ROWCOUNT>3;
DBMS_OUTPUT.PUT_LINE(F.NOM_AL||' '||F.APE_AL||', '||F.NOM_ASI||': '||F.NOTA);
END LOOP;
CLOSE C;
END;

EXECUTE EJ4_INSTITUTO;

5.
CREATE OR REPLACE PROCEDURE EJ5_INSTITUTO(DEP I_PROFESORES.DEPARTAMENTO%TYPE) AS
CURSOR C IS SELECT ROWID,DEPARTAMENTO,SUELDO FROM I_PROFESORES WHERE DEPARTAMENTO=DEP;
SALARIO_MAX_DEP NUMBER(6,2);
SUBIDA NUMBER(6,2);
F C%ROWTYPE;
BEGIN
FOR F IN C LOOP
 COMMIT;
 SELECT MAX(SUELDO) INTO SALARIO_MAX_DEP FROM I_PROFESORES WHERE DEPARTAMENTO=F.DEPARTAMENTO;
 SUBIDA:=SALARIO_MAX_DEP-F.SUELDO;
 UPDATE I_PROFESORES SET SUELDO=SUELDO+SUBIDA WHERE ROWID=F.ROWID;
  COMMIT;
 END LOOP;
END;

EXECUTE EJ5_INSTITUTO('Informatica');

CREATE OR REPLACE PROCEDURE EJ5_INSTITUTO_1(DEP I_PROFESORES.DEPARTAMENTO%TYPE) AS
CURSOR C IS SELECT ROWID,DEPARTAMENTO,SUELDO FROM I_PROFESORES WHERE DEPARTAMENTO=DEP;
SALARIO_MAX_DEP NUMBER(6,2);
SUBIDA NUMBER(6,2);
F C%ROWTYPE;
BEGIN
FOR F IN C LOOP
 COMMIT;
 SELECT MAX(SUELDO) INTO SALARIO_MAX_DEP FROM I_PROFESORES WHERE DEPARTAMENTO=F.DEPARTAMENTO;
 SUBIDA:=SALARIO_MAX_DEP;
 UPDATE I_PROFESORES SET SUELDO=SUBIDA WHERE ROWID=F.ROWID;
  COMMIT;
 END LOOP;
END;

EXECUTE EJ5_INSTITUTO_1('Informatica');


BBDD INSTITUTO

--3
CREATE OR REPLACE PROCEDURE EJ3_INSTI(CAL I_ALUMNOS.CODAL%TYPE)
AS
CALU I_ALUMNOS.CODAL%TYPE;
NOM I_ALUMNOS.NOMBRE%TYPE;
APE I_ALUMNOS.APELLIDOS%TYPE;
CIU I_ALUMNOS.CIUDAD%TYPE;
FEC I_ALUMNOS.FECHANACIMIENTO%TYPE;
BEGIN
SELECT CODAL,NOMBRE,APELLIDOS,CIUDAD,FECHANACIMIENTO 
INTO CALU,NOM,APE,CIU,FEC FROM I_ALUMNOS WHERE CODAL=CAL;
DBMS_OUTPUT.PUT_LINE(CALU||' '||NOM||' '||APE||' '||CIU||' '||FEC);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('EL ALUMNO NO EXISTE');
END;

EXECUTE EJ3_INSTI(1)

--4
CREATE OR REPLACE TRIGGER EJ4_INSTI
BEFORE UPDATE OR INSERT ON I_NOTAS
FOR EACH ROW
BEGIN
 IF :NEW.NOTA<0 THEN
  :NEW.NOTA:=-1*:NEW.NOTA;
 END IF;
  IF :NEW.FECHA>CURRENT_DATE THEN
  :NEW.FECHA:=CURRENT_DATE;
 END IF;
END;

INSERT INTO I_NOTAS VALUES (1,'GBD','26/05/2023',-8);

SELECT * FROM I_NOTAS;

--5
CREATE OR REPLACE PROCEDURE EJ5_INSTI(NAS I_ASIGNATURAS.NOMBRE%TYPE)
AS
 CURSOR C IS SELECT AL.CODAL,AL.NOMBRE AL_NOM,AL.APELLIDOS,ASI.NOMBRE AL_ASI,ASI.CURSO,ASI.NIVEL,N.FECHA,N.NOTA
 FROM I_ALUMNOS AL INNER JOIN I_NOTAS N ON AL.CODAL=N.CODAL INNER JOIN I_ASIGNATURAS ASI ON N.CODAS=ASI.CODAS
 WHERE ASI.NOMBRE=NAS ORDER BY AL.APELLIDOS,AL.NOMBRE;
BEGIN
 FOR F IN C LOOP
  DBMS_OUTPUT.PUT_LINE(F.CODAL||' '||F.AL_NOM||' '||F.APELLIDOS||' '||F.AL_ASI||' '||F.CURSO||' '||F.NIVEL||' '||
  F.FECHA||' '||F.NOTA);
 END LOOP;
END;

EXECUTE EJ5_INSTI('Aplicaciones Web')

--6
CREATE OR REPLACE PROCEDURE EJ6_INSTI
AS
 CURSOR C IS SELECT N.NOTA
 FROM I_ALUMNOS AL INNER JOIN I_NOTAS N ON AL.CODAL=N.CODAL INNER JOIN I_ASIGNATURAS ASI ON N.CODAS=ASI.CODAS;
BEGIN
 FOR F IN C LOOP
  IF F.NOTA*1.1<=10 THEN
   F.NOTA:=F.NOTA*1.1;
  END IF;
 END LOOP;
END;

EXECUTE EJ6_INSTI;







